name: Docker Deploy Pipeline

on:
  push:
    branches:
      - main  # Triggers on push to 'main' branch

jobs:
  docker-deploy:
    name: Part 3 - Build & Deploy Docker Container
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: barath0023/sample-app:latest

  ci-cd-pipeline:
    name: Part 4 - CI/CD Pipeline for AWS Deployment
    runs-on: ubuntu-latest
    needs: docker-deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 1: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "eu-west-1"

      # Step 2: SSH into EC2 instance to deploy Docker container
      - name: SSH into EC2 and Deploy Docker Container
        run: |
          ssh -o StrictHostKeyChecking=no -i /mnt/c/Users/barat/terraform-aws-server/ec2key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} "docker pull barath0023/sample-app:latest && docker run -d -p 80:80 barath0023/sample-app:latest"
